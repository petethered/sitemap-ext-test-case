---
import { ViewTransitions } from 'astro:transitions'
import ReplacementSwap from 'astro-vtbot/components/ReplacementSwap.astro';


export interface Props {
  title: string;
}
let { title, breadCrumbs = [] } = Astro.props as Props;
let homeLink = "/";
let noContainer = false;
const breadCrumbsMobile = breadCrumbs.filter((item, index) => {
  if (index < 1) {
    return item;
  }
  if (index >= breadCrumbs.length - 1) {
    return item;
  }
})
title = "MLB Test - " + title;

---


<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="theme-color" content="#000000" />
    <link rel="preload" href="https://fonts.googleapis.com/css?family=Noto%20Sans:300,400,500,600,700,900" as="style" onload="this.onload=null;this.rel='stylesheet'">
    <noscript>
      <link href="https://fonts.googleapis.com/css?family=Noto%20Sans:300,400,500,600,700,900" rel="stylesheet" type="text/css">
    </noscript>
    <link rel="canonical" href={"https://mlbtest.com" + Astro.url.pathname} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">
    <meta
      name="description"
      content="MLBTest"
    />
    <title>{title}</title>
     <style>
      *, body * , * *, * * *, * * * * {
        font-family: "Noto Sans", Inter, ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
      }


     </style>

         <ViewTransitions />
         <ReplacementSwap />
     </head>
     <body class="">
      <div class="outer" data-vtbot-replace="main">
        <div class="container mx-auto py-4">

          { 
          <div class={"container" + " " + (noContainer ? "px-5 md:px-5 mx-auto" : "")}>
            <div class="relative w-full  pb-10">
            <div class="text-sm breadcrumbs p-0 m-0 pb-0 absolute left-0 top-[50%] -translate-y-1/2 hidden md:block">
              <ul>
                <li><a href={homeLink} class="text-xs">Home</a></li> 
                {breadCrumbs.map((item, index) => {
                  let classString = "";
                  return (
                  <li class={classString}>
                      <a href={item.path} class="text-xs" id={!item?.id ? item.text.replaceAll(/\W/g, "_") + Date.now() : `${item.id}`}>{item.text}</a>
                    </li>
                  )
                })}
              </ul>
            </div>       
            <div class="text-sm breadcrumbs p-0 m-0 pb-0 absolute left-0 top-[50%] -translate-y-1/2 block md:hidden">
              <ul>
                <li><a href="/" class="text-xs">Home</a></li> 
                {breadCrumbsMobile.map((item, index) => {
                  let classString = "";
                  return(
                      <li class={classString}>
                        <a href={item.path} class="text-xs" id={!item?.id ? item.text.replaceAll(/\W/g, "_") + Date.now() : `${item.id}`}>{item.text}</a>
                      </li>
                  )
                })}
              </ul>
            </div>                       
          </div>
        </div>
        }

          <slot />
        </div>
      </div>          
  </body>
</html>


